heartbpm <- c(47.53, 48.27, 49.51, 51.09, 52.57, 54.30,
54.25, 54.45, 57.95, 60.92, 61.91, 77.92,
82.07, 82.95, 83.94, 86.96, 90.42, 92.93, 100.05)
metabol <- c(6.15, 6.31, 6.43, 6.78, 6.86, 6.90, 7.37, 7.41,
8.24, 9.22, 8.16, 12.61, 15.26, 13.09, 14.59,
17.35, 18.57, 19.00, 20.70)
vulture <- data.frame(heartbpm, metabol)
rm(heartbpm, metabol)
attach(vulture)
plot(vulture)
title(main="@y vs. @x",
xlab="Metabolismo",
ylab="Frecuencia cardíaca")
plot(vulture)
title(main="@y vs. @x",
xlab="Metabolismo",
ylab="Frecuencia cardíaca")
plot(vulture)
title(main="@y vs. @x",
xlab="Metabolismo",
ylab="Frecuencia cardíaca")
plot(vulture)
title(xlab="Metabolismo",
ylab="Frecuencia cardíaca")
plot(vulture,
xlab="Metabolismo",
ylab="Frecuencia cardíaca")
plot(vulture,
ylab="Metabolismo",
xlab="Frecuencia cardíaca")
abline()
plot(vulture,
ylab="Metabolismo",
xlab="Frecuencia cardíaca")
abline()
plot(vulture,
ylab="Metabolismo",
xlab="Frecuencia cardíaca")
abline(h=metabol, v=heartbpm)
plot(vulture,
ylab="Metabolismo",
xlab="Frecuencia cardíaca")
abline(rm)
plot(vulture,
ylab="Metabolismo",
xlab="Frecuencia cardíaca")
abline(lm(heartbpm ~ metabol))
plot(heartbpm, metabol,
ylab="Metabolismo",
xlab="Frecuencia cardíaca")
abline(lm(heartbpm ~ metabol))
plot(heartbpm, metabol,
ylab="Metabolismo",
xlab="Frecuencia cardíaca")
abline(lm(metabol ~ heartbpm))
plot(heartbpm, metabol,
xlab="Frecuencia cardíaca"
ylab="Metabolismo")
plot(heartbpm, metabol,
xlab="Frecuencia cardíaca",
ylab="Metabolismo")
abline(lm(metabol ~ heartbpm))
rm(heartbpm, metabol)
heartbpm <- c(47.53, 48.27, 49.51, 51.09, 52.57, 54.30,
54.25, 54.45, 57.95, 60.92, 61.91, 77.92,
82.07, 82.95, 83.94, 86.96, 90.42, 92.93, 100.05)
metabol <- c(6.15, 6.31, 6.43, 6.78, 6.86, 6.90, 7.37, 7.41,
8.24, 9.22, 8.16, 12.61, 15.26, 13.09, 14.59,
17.35, 18.57, 19.00, 20.70)
vulture <- data.frame(heartbpm, metabol)
rm(heartbpm, metabol)
plot(vulture,
xlab="Frecuencia cardíaca",
ylab="Metabolismo")
abline(lm(vulture))
heartbpm <- c(47.53, 48.27, 49.51, 51.09, 52.57, 54.30,
54.25, 54.45, 57.95, 60.92, 61.91, 77.92,
82.07, 82.95, 83.94, 86.96, 90.42, 92.93, 100.05)
metabol <- c(6.15, 6.31, 6.43, 6.78, 6.86, 6.90, 7.37, 7.41,
8.24, 9.22, 8.16, 12.61, 15.26, 13.09, 14.59,
17.35, 18.57, 19.00, 20.70)
vulture <- data.frame(heartbpm, metabol)
rm(heartbpm, metabol)
attach(vulture)
heartbpm <- c(47.53, 48.27, 49.51, 51.09, 52.57, 54.30,
54.25, 54.45, 57.95, 60.92, 61.91, 77.92,
82.07, 82.95, 83.94, 86.96, 90.42, 92.93, 100.05)
metabol <- c(6.15, 6.31, 6.43, 6.78, 6.86, 6.90, 7.37, 7.41,
8.24, 9.22, 8.16, 12.61, 15.26, 13.09, 14.59,
17.35, 18.57, 19.00, 20.70)
vulture <- data.frame(heartbpm, metabol)
rm(heartbpm, metabol)
attach(vulture)
plot(vulture,
xlab="Frecuencia cardíaca",
ylab="Metabolismo")
abline(lm(vulture))
plot(vulture,
xlab="Frecuencia cardíaca",
ylab="Metabolismo")
abline(lm(metabol ~ heartb, data = vulture))
plot(vulture,
xlab="Frecuencia cardíaca",
ylab="Metabolismo")
abline(lm(metabol ~ heartbpm, data = vulture))
heartbpm <- c(47.53, 48.27, 49.51, 51.09, 52.57, 54.30,
54.25, 54.45, 57.95, 60.92, 61.91, 77.92,
82.07, 82.95, 83.94, 86.96, 90.42, 92.93, 100.05)
metabol <- c(6.15, 6.31, 6.43, 6.78, 6.86, 6.90, 7.37, 7.41,
8.24, 9.22, 8.16, 12.61, 15.26, 13.09, 14.59,
17.35, 18.57, 19.00, 20.70)
vulture <- data.frame(heartbpm, metabol)
rm(heartbpm, metabol)
attach(vulture)
heartbpm <- c(47.53, 48.27, 49.51, 51.09, 52.57, 54.30,
54.25, 54.45, 57.95, 60.92, 61.91, 77.92,
82.07, 82.95, 83.94, 86.96, 90.42, 92.93, 100.05)
metabol <- c(6.15, 6.31, 6.43, 6.78, 6.86, 6.90, 7.37, 7.41,
8.24, 9.22, 8.16, 12.61, 15.26, 13.09, 14.59,
17.35, 18.57, 19.00, 20.70)
vulture <- data.frame(heartbpm, metabol)
rm(heartbpm, metabol)
plot(vulture,
xlab="Frecuencia cardíaca",
ylab="Metabolismo")
abline(lm(metabol ~ heartbpm, data = vulture))
View(vulture)
lm <- lm(metabol ~ heartbpm, data = vulture)
residuos <- resid(lm)
plot(vulture,
xlab="Frecuencia cardíaca",
ylab="Residuos",
main="Residuos vs. valores ajustados")
lm <- lm(metabol ~ heartbpm, data = vulture)
residuos <- resid(lm)
plot(vulture$heartbpm, residuos,
xlab="Frecuencia cardíaca",
ylab="Residuos",
main="Residuos vs. valores ajustados")
lm <- lm(metabol ~ heartbpm, data = vulture)
residuos <- resid(lm)
plot(vulture$heartbpm, residuos,
xlab="Frecuencia cardíaca",
ylab="Residuos",
main="Residuos vs. valores ajustados")
abline(0,0)
plot(vulture,
xlab="Frecuencia cardíaca",
ylab="Metabolismo")
abline(lsfit(heartbpm, metabol))
ls <- lsfit(heartbpm, metabol)
residuos <- resid(ls)
plot(vulture$heartbpm, residuos,
xlab="Frecuencia cardíaca",
ylab="Residuos",
main="Residuos vs. valores ajustados")
abline(0,0)
### EJEMPLO CARMONA PONTAQUE
dens<-c(12.7,17.0,66.0,50.0,87.8,81.4,75.6,66.2,81.1,62.8,77.0,89.6,
18.3,19.1,16.5,22.2,18.6,66.0,60.3,56.0,66.3,61.7,66.6,67.8)
vel<-c(62.4,50.7,17.1,25.9,12.4,13.4,13.7,17.9,13.8,17.9,15.8,12.6,
51.2,50.8,54.7,46.5,46.3,16.9,19.8,21.2,18.3,18.0,16.6,18.3)
rvel<-sqrt(vel)
par(pty="m")
plot(dens,rvel,type="p",xlab="densidad",ylab="RAIZ(vel)")
recta.ls<-lsfit(dens,rvel)
abline(recta.ls)
recta.ls$coef
ls.print(recta.ls, digits=4, print.it=T)
ls.diag(recta.ls)$std.dev
e<-recta.ls$residuals
par(mfrow=c(1,2))
par(pty="s")
plot(dens,e,type="p",xlab="densidad",ylab="residuos",ylim=c(-0.6,0.6))
abline(h=0)
pred<-rvel-e
plot(pred,e,type="p",xlab="predicci´on",ylab="residuos",ylim=c(-0.6,0.6))
abline(h=0)
load("C:/Users/maria/OneDrive/Escritorio/UOC/Materias/3.MO156. Regresión, modelos y métodos/uoc-regresion-modelos-metodos/actividad1/.RData")
heartbpm <- c(47.53, 48.27, 49.51, 51.09, 52.57, 54.30,
54.25, 54.45, 57.95, 60.92, 61.91, 77.92,
82.07, 82.95, 83.94, 86.96, 90.42, 92.93, 100.05)
metabol <- c(6.15, 6.31, 6.43, 6.78, 6.86, 6.90, 7.37, 7.41,
8.24, 9.22, 8.16, 12.61, 15.26, 13.09, 14.59,
17.35, 18.57, 19.00, 20.70)
vulture <- data.frame(heartbpm, metabol)
plot(vulture,
xlab="Frecuencia cardíaca",
ylab="Metabolismo")
abline(lsfit(heartbpm, metabol))
ls <- lsfit(heartbpm, metabol)
residuos <- resid(ls)
plot(vulture$heartbpm, residuos,
xlab="Frecuencia cardíaca",
ylab="Residuos",
main="Residuos vs. valores ajustados")
abline(0,0)
ls <- lsfit(heartbpm, metabol)
residuos <- ls$residuals
plot(heartbpm, residuos,
xlab="Frecuencia cardíaca",
ylab="Residuos",
main="Residuos vs. valores ajustados")
abline(0,0)
plot(heartbpm, metabol,
xlab="Frecuencia cardíaca",
ylab="Tasa metabólica")
abline(lm(metabol ~ heartbpm, data=vulture))
lm <- lm(metabol ~ heartbpm, data=vulture)
residuos <- lm$residuals
plot(heartbpm, residuos,
xlab="Frecuencia cardíaca",
ylab="Residuos",
main="Residuos vs. valores ajustados")
abline(0,0)
lm <- lm(metabol ~ heartbpm, data=vulture)
residuos <- lm$residuals
plot(heartbpm, residuos,
xlab="Valores ajustados",
ylab="Residuos",
main="Residuos vs. valores ajustados")
abline(0,0)
lm2 <- lm(metabol ~ heartbpm + I(heartbpm^2), data=vulture)
# I isolates or insulates the contents of I( ... ) from the gaze of R's formula
# parsing code. It allows the standard R operators to work as they would if you
# used them outside of a formula, rather than being treated as special formula
# operators.
lm2$coef
lm2 <- lm(metabol ~ heartbpm + I(heartbpm^2), data=vulture)
# I isolates or insulates the contents of I( ... ) from the gaze of R's formula
# parsing code. It allows the standard R operators to work as they would if you
# used them outside of a formula, rather than being treated as special formula
# operators.
coeficientes <- coef(lm2)
plot(heartbpm, metabol,
xlab="Frecuencia cardíaca",
ylab="Tasa metabólica")
curve(coeficientes[1] + coeficientes[2]*x + coeficientes[3]*(x**2))
lm2 <- lm(metabol ~ heartbpm + I(heartbpm^2), data=vulture)
# I isolates or insulates the contents of I( ... ) from the gaze of R's formula
# parsing code. It allows the standard R operators to work as they would if you
# used them outside of a formula, rather than being treated as special formula
# operators.
coeficientes <- coef(lm2)
plot(heartbpm, metabol,
xlab="Frecuencia cardíaca",
ylab="Tasa metabólica")
curve(coeficientes[1] + coeficientes[2]*x + coeficientes[3]*(x**2),
add=TRUE)
par(pty="m")
plot(heartbpm, metabol,
xlab="Frecuencia cardíaca",
ylab="Tasa metabólica")
abline(lm(metabol ~ heartbpm, data=vulture))
par(pty="s")
plot(heartbpm, metabol,
xlab="Frecuencia cardíaca",
ylab="Tasa metabólica")
abline(lm(metabol ~ heartbpm, data=vulture))
plot(heartbpm, metabol,
xlab="Frecuencia cardíaca",
ylab="Tasa metabólica")
abline(lm(metabol ~ heartbpm, data=vulture))
plot(heartbpm, metabol,
xlab="Frecuencia cardíaca",
ylab="Tasa metabólica")
abline(lm(metabol ~ heartbpm, data=vulture))
plot(heartbpm, metabol,
xlab="Frecuencia cardíaca",
ylab="Tasa metabólica")
abline(lm(metabol ~ heartbpm, data=vulture))
plot(heartbpm, metabol,
xlab="Frecuencia cardíaca",
ylab="Tasa metabólica")
abline(lm(metabol ~ heartbpm, data=vulture))
plot(heartbpm, metabol,
xlab="Frecuencia cardíaca",
ylab="Tasa metabólica")
abline(lm(metabol ~ heartbpm, data=vulture))
options(width = 300)
heartbpm <- c(47.53, 48.27, 49.51, 51.09, 52.57, 54.30,
54.25, 54.45, 57.95, 60.92, 61.91, 77.92,
82.07, 82.95, 83.94, 86.96, 90.42, 92.93, 100.05)
metabol <- c(6.15, 6.31, 6.43, 6.78, 6.86, 6.90, 7.37, 7.41,
8.24, 9.22, 8.16, 12.61, 15.26, 13.09, 14.59,
17.35, 18.57, 19.00, 20.70)
vulture <- data.frame(heartbpm, metabol)
#| out-width: 0.5
plot(heartbpm, metabol,
xlab="Frecuencia cardíaca",
ylab="Tasa metabólica")
abline(lm(metabol ~ heartbpm, data=vulture))
plot(heartbpm, metabol,
xlab="Frecuencia cardíaca",
ylab="Tasa metabólica")
abline(lm(metabol ~ heartbpm, data=vulture))
plot(heartbpm, metabol,
xlab="Frecuencia cardíaca",
ylab="Tasa metabólica")
abline(lm(metabol ~ heartbpm, data=vulture))
plot(heartbpm, metabol,
xlab="Frecuencia cardíaca",
ylab="Tasa metabólica")
abline(lm(metabol ~ heartbpm, data=vulture))
plot(heartbpm, metabol,
xlab="Frecuencia cardíaca",
ylab="Tasa metabólica")
abline(lm(metabol ~ heartbpm, data=vulture))
